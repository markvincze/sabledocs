version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  build_dev:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: ~/project/src/sabledocs/
      - run:
          command: |
            pip install build
            python -m build -C--global-option=egg_info -C--global-option=--tag-build=".${CIRCLE_BUILD_NUM}dev"
            package_base_version=$(grep 'version =' pyproject.toml | sed -e 's/version = "\(.*\)"/\1/')
            export PACKAGE_VERSION="$package_base_version.${CIRCLE_BUILD_NUM}dev0"
            echo "export PACKAGE_VERSION='$package_base_version.${CIRCLE_BUILD_NUM}dev0'" >> $BASH_ENV
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

  build_stable:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: ~/project/src/sabledocs/
      - run:
          command: |
            pip install build
            python -m build -C--global-option=egg_info -C--global-option=--tag-build=".${CIRCLE_BUILD_NUM}"
            package_base_version=$(grep 'version =' pyproject.toml | sed -e 's/version = "\(.*\)"/\1/')
            echo "export PACKAGE_VERSION='$package_base_version.${CIRCLE_BUILD_NUM}'" >> $BASH_ENV
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

  publish_pypi:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - attach_workspace:
          at: dist
      - run:
          command: |
            pip install twine
            python -m twine upload -u __token__ -p ${PYPI_API_TOKEN} ~/project/dist/*

  generate_sample_docs:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "d5:12:33:42:6b:cd:57:b7:7f:08:2c:7a:a2:c4:54:6d"
      - python/install-packages:
          pkg-manager: pip
          app-dir: ~/project/src/sabledocs/
      - run:
          command: |
            git config --global user.email "mrk.vincze@gmail.com"
            git config --global user.name "sabledocs CI"
            chmod +x generate_sample_docs.sh
            ./generate_sample_docs.sh

  publish_docker_image:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      # - add_ssh_keys:
      #     fingerprints:
      #       - "d5:12:33:42:6b:cd:57:b7:7f:08:2c:7a:a2:c4:54:6d"
      # - python/install-packages:
      #     pkg-manager: pip
      #     app-dir: ~/project/src/sabledocs/
            # package_version=$(grep 'version =' pyproject.toml | sed -e 's/version = "\(.*\)"/\1/')
            # if [ "$CIRCLE_BRANCH" = "main" ]; then revision="${CIRCLE_BUILD_NUM}"; else revision="${CIRCLE_BUILD_NUM}dev0"; fi
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: |
            protoc_version=$(curl -sL https://api.github.com/repos/protocolbuffers/protobuf/releases/latest | jq -r ".tag_name")
            echo "docker build -t markvincze/sabledocs:${package_version}.${revision} --build-arg sabledocs_version=${PACKAGE_VERSION} --build-arg protoc_version=${protoc_version:1} ."
            docker build -t markvincze/sabledocs:${package_version}.${revision} --build-arg sabledocs_version=${PACKAGE_VERSION} --build-arg protoc_version=${protoc_version:1} .

workflows:
  build-and-publish:
    jobs:
      - build_dev:
          filters:
            branches:
              ignore:
                - main
      - build_stable:
          filters:
            branches:
              only:
                - main
      - publish_pypi:
          name: publish_pypi_dev
          requires:
            - build_dev
      - publish_pypi:
          name: publish_pypi_stable
          requires:
            - build_stable
      - generate_sample_docs:
          requires:
            - publish_pypi_stable
      - publish_docker_image:
          name: publish_docker_image_dev
          requires:
            - publish_pypi_dev
      - publish_docker_image:
          name: publish_docker_image_stable
          requires:
            - publish_pypi_stable
